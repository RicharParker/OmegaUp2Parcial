import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.Queue;
import java.util.LinkedList;
import java.util.Stack;

public class Main{
public static final Integer EOF= -1;
public static void main(String[] args) {
  try (Scanner s = new Scanner(System.in)) {
   Queue<String> cola= new LinkedList<String>();
   Stack<Integer> pila= new Stack<Integer>();
   String fre= s.nextLine();
   StringTokenizer fichas = new StringTokenizer(fre);
        while(fichas.hasMoreTokens()){
       cola.add(fichas.nextToken());
         }
	  while(!cola.isEmpty()) {
		if(!cola.isEmpty()) {
		String v= cola.remove();
		boolean vera= ver(v.charAt(0));
		if(vera==true) {
		   if(!pila.isEmpty()) {
		    int g=pila.pop();
		       if(!pila.isEmpty()) {
		        int f=pila.pop();
		        int re=operacion(v.charAt(0),f,g);
			pila.push(re);
			}
			}
			}else {
			pila.push(Integer.parseInt(v));
			}
			}
			}
			  if(!pila.isEmpty()) {
			    System.out.println(pila.peek());
			  }
}
	}

public static boolean ver(char x) {
    if(x=='+'||x=='-'||x=='*'||x=='/'||x=='^') {
	return true;
     }else {
	return false;
       }
    }
public static int operacion(char a, int b, int c) {
   if(a=='+') {
   return b+c;
   }else if(a=='-') {
   return b-c;
   }else if(a=='*') {
   return b*c;
   }else if(a=='/') {
   if(c!=0) {
   return b/c;
   }
   } 
    return (int) Math.pow(b, c);
}
  }
